{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode\\\\ipd\\\\ipd\\\\frontend\\\\src\\\\pages\\\\NearestLocation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NearestLocation = () => {\n  _s();\n  const [locations, setLocations] = useState([]);\n\n  //   useEffect(() => {\n  //     // Replace 'http://127.0.0.1:8000/location/near_loc/' with the actual endpoint\n  //     // and update the body with the desired lat, lon, and spot values\n  //     axios.post('http://127.0.0.1:8000/location/near_loc/', {\n  //       lat: 19.182381002086892,\n  //       lon: 72.85872142939337,\n  //       spot: 'parking_spot',\n  //     })\n  //       .then((response) => setLocations(response.data))\n  //       .catch((error) => console.error('Error fetching data:', error));\n  //     console.log(locations)\n  //   }, []);\n  useEffect(() => {\n    console.log(\"useEffect started\");\n    const fetchData = async () => {\n      try {\n        // Replace 'http://127.0.0.1:8000/location/near_loc/' with the actual endpoint\n        // and update the body with the desired lat, lon, and spot values\n        const response = await axios.post(\"http://127.0.0.1:8000/location/near_loc/\", {\n          lat: 19.1658299,\n          lon: 72.8515051,\n          spot: \"parking_spot\"\n        });\n        console.log(\"Response data:\", response.data);\n\n        // Use a functional update to ensure you're working with the latest state\n        // setLocations((prevLocations) => {\n        //   console.log(\"Previous locations state:\", prevLocations);\n        //   return [...prevLocations, ...response.data];\n        // });\n        setLocations(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    console.log(locations);\n  }, [locations]);\n  const customIcon = new L.Icon({\n    iconUrl: \"https://cdn1.iconfinder.com/data/icons/ios-11-glyphs/30/car-512.png\",\n    iconSize: [30, 30]\n  });\n  const userLocationIcon2 = new L.Icon({\n    iconUrl: 'https://cdn-icons-png.flaticon.com/512/3082/3082383.png',\n    iconSize: [30, 30]\n  });\n  const checklocation = location => {\n    console.log(\"checking\", location);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [19.1658299, 72.8515051],\n      zoom: 16,\n      scrollWheelZoom: true,\n      style: {\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [19.1658299, 72.8515051],\n        icon: userLocationIcon2,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"Your Current Location \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), console.log(\"Locations:\", locations), locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [location.coordinates[1], location.coordinates[0]],\n        icon: customIcon,\n        children: [\"checklocation(location)\", /*#__PURE__*/_jsxDEV(Popup, {\n          children: [location.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 31\n          }, this), \"Distance: \", location.distance_km, \" km \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(NearestLocation, \"MB6FmaD0YN2j72DuSocJeRR7/38=\");\n_c = NearestLocation;\nexport default NearestLocation;\nvar _c;\n$RefreshReg$(_c, \"NearestLocation\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","L","axios","jsxDEV","_jsxDEV","NearestLocation","_s","locations","setLocations","console","log","fetchData","response","post","lat","lon","spot","data","error","customIcon","Icon","iconUrl","iconSize","userLocationIcon2","checklocation","location","id","style","height","children","center","zoom","scrollWheelZoom","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","position","icon","map","index","coordinates","name","distance_km","_c","$RefreshReg$"],"sources":["D:/VSCode/ipd/ipd/frontend/src/pages/NearestLocation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport axios from \"axios\";\n\nconst NearestLocation = () => {\n  const [locations, setLocations] = useState([]);\n\n  //   useEffect(() => {\n  //     // Replace 'http://127.0.0.1:8000/location/near_loc/' with the actual endpoint\n  //     // and update the body with the desired lat, lon, and spot values\n  //     axios.post('http://127.0.0.1:8000/location/near_loc/', {\n  //       lat: 19.182381002086892,\n  //       lon: 72.85872142939337,\n  //       spot: 'parking_spot',\n  //     })\n  //       .then((response) => setLocations(response.data))\n  //       .catch((error) => console.error('Error fetching data:', error));\n  //     console.log(locations)\n  //   }, []);\n  useEffect(() => {\n    console.log(\"useEffect started\");\n    const fetchData = async () => {\n      try {\n        // Replace 'http://127.0.0.1:8000/location/near_loc/' with the actual endpoint\n        // and update the body with the desired lat, lon, and spot values\n        const response = await axios.post(\n          \"http://127.0.0.1:8000/location/near_loc/\",\n          {\n            lat: 19.1658299,\n            lon: 72.8515051,\n            spot: \"parking_spot\",\n          }\n        );\n        console.log(\"Response data:\", response.data);\n\n        // Use a functional update to ensure you're working with the latest state\n        // setLocations((prevLocations) => {\n        //   console.log(\"Previous locations state:\", prevLocations);\n        //   return [...prevLocations, ...response.data];\n        // });\n        setLocations(response.data)\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n    console.log(locations);\n  }, [locations]);\n\n  const customIcon = new L.Icon({\n    iconUrl:\n      \"https://cdn1.iconfinder.com/data/icons/ios-11-glyphs/30/car-512.png\",\n    iconSize: [30, 30],\n  });\n\n  const userLocationIcon2 = new L.Icon({\n    iconUrl: 'https://cdn-icons-png.flaticon.com/512/3082/3082383.png',\n    iconSize: [30, 30],\n  });\n\n  const checklocation = (location) => {\n    console.log(\"checking\", location);\n  };\n  return (\n    <div id=\"map\" style={{ height: \"100vh\" }}>\n      <MapContainer\n        center={[19.1658299, 72.8515051]}\n        zoom={16}\n        scrollWheelZoom={true}\n        style={{ height: \"100%\" }}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={[19.1658299, 72.8515051]} icon={userLocationIcon2}>\n          <Popup>\n            Your Current Location <br /> \n          </Popup>\n        </Marker>\n        {console.log(\"Locations:\", locations)}\n        {/* Dynamically render markers for each location received from the API response */}\n        {locations.map((location, index) => (\n          <Marker key={index} position={[location.coordinates[1], location.coordinates[0]]} icon={customIcon}>\n            checklocation(location)\n            <Popup>\n              {location.name} <br />\n              Distance: {location.distance_km} km <br />\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default NearestLocation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}