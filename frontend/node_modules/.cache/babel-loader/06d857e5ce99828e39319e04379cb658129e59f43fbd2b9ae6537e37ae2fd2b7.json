{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode\\\\ipd\\\\ipd\\\\frontend\\\\src\\\\pages\\\\Login.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.handleUsernameChange = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n    this.handlePasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n    this.handleLogin = () => {\n      const {\n        username,\n        password\n      } = this.state;\n\n      // Simulate a login check (You should replace this with your actual login logic)\n      if (username === 'yourUsername' && password === 'yourPassword') {\n        this.setState({\n          loggedIn: true,\n          error: ''\n        });\n      } else {\n        this.setState({\n          loggedIn: false,\n          error: 'Invalid username or password'\n        });\n      }\n    };\n    this.state = {\n      username: '',\n      password: '',\n      loggedIn: false,\n      error: ''\n    };\n  }\n  render() {\n    const {\n      username,\n      password,\n      loggedIn,\n      error\n    } = this.state;\n\n    // If the user is logged in, display a success message\n    if (loggedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Welcome, \", username, \"! You are now logged in.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: this.handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: this.handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LoginPage;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","LoginPage","constructor","props","handleUsernameChange","event","setState","username","target","value","handlePasswordChange","password","handleLogin","state","loggedIn","error","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","style","color"],"sources":["D:/VSCode/ipd/ipd/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      loggedIn: false,\n      error: '',\n    }; \n  } \n\n  handleUsernameChange = (event) => {\n    this.setState({ username: event.target.value });\n  };\n\n  handlePasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  handleLogin = () => {\n    const { username, password } = this.state;\n\n    // Simulate a login check (You should replace this with your actual login logic)\n    if (username === 'yourUsername' && password === 'yourPassword') {\n      this.setState({ loggedIn: true, error: '' });\n    } else {\n      this.setState({ loggedIn: false, error: 'Invalid username or password' });\n    }\n  };\n\n  render() {\n    const { username, password, loggedIn, error } = this.state;\n\n    // If the user is logged in, display a success message\n    if (loggedIn) {\n      return <div>Welcome, {username}! You are now logged in.</div>;\n    }\n\n    return (\n      <div>\n        <h2>Login Page</h2>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={this.handleUsernameChange}\n          />\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={this.handlePasswordChange}\n          />\n        </div>\n        <div>\n          <button onClick={this.handleLogin}>Login</button>\n        </div>\n        <div style={{ color: 'red' }}>{error}</div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}